#include <vulkan/vulkan.h>
static_assert(VK_MAX_PHYSICAL_DEVICE_NAME_SIZE == (256));
static_assert(VK_UUID_SIZE == (16));
static_assert(VK_LUID_SIZE == (8));
static_assert(VK_LUID_SIZE_KHR == VK_LUID_SIZE);
static_assert(VK_MAX_EXTENSION_NAME_SIZE == (256));
static_assert(VK_MAX_DESCRIPTION_SIZE == (256));
static_assert(VK_MAX_MEMORY_TYPES == (32));
static_assert(VK_MAX_MEMORY_HEAPS == (16));
static_assert(VK_LOD_CLAMP_NONE == (1000.0f));
static_assert(VK_REMAINING_MIP_LEVELS == ((~0U)));
static_assert(VK_REMAINING_ARRAY_LAYERS == ((~0U)));
static_assert(VK_WHOLE_SIZE == ((~0ULL)));
static_assert(VK_ATTACHMENT_UNUSED == ((~0U)));
static_assert(VK_TRUE == (1));
static_assert(VK_FALSE == (0));
static_assert(VK_QUEUE_FAMILY_IGNORED == ((~0U)));
static_assert(VK_QUEUE_FAMILY_EXTERNAL == ((~0U - 1)));
static_assert(VK_QUEUE_FAMILY_EXTERNAL_KHR == VK_QUEUE_FAMILY_EXTERNAL);
static_assert(VK_QUEUE_FAMILY_FOREIGN_EXT == ((~0U - 2)));
static_assert(VK_SUBPASS_EXTERNAL == ((~0U)));
static_assert(VK_MAX_DEVICE_GROUP_SIZE == (32));
static_assert(VK_MAX_DEVICE_GROUP_SIZE_KHR == VK_MAX_DEVICE_GROUP_SIZE);
static_assert(VK_IMAGE_LAYOUT_UNDEFINED == (0));
static_assert(VK_IMAGE_LAYOUT_GENERAL == (1));
static_assert(VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL == (2));
static_assert(VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL == (3));
static_assert(VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL == (4));
static_assert(VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL == (5));
static_assert(VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL == (6));
static_assert(VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL == (7));
static_assert(VK_IMAGE_LAYOUT_PREINITIALIZED == (8));
static_assert(VK_ATTACHMENT_LOAD_OP_LOAD == (0));
static_assert(VK_ATTACHMENT_LOAD_OP_CLEAR == (1));
static_assert(VK_ATTACHMENT_LOAD_OP_DONT_CARE == (2));
static_assert(VK_ATTACHMENT_STORE_OP_STORE == (0));
static_assert(VK_ATTACHMENT_STORE_OP_DONT_CARE == (1));
static_assert(VK_IMAGE_TYPE_1D == (0));
static_assert(VK_IMAGE_TYPE_2D == (1));
static_assert(VK_IMAGE_TYPE_3D == (2));
static_assert(VK_IMAGE_TILING_OPTIMAL == (0));
static_assert(VK_IMAGE_TILING_LINEAR == (1));
static_assert(VK_IMAGE_VIEW_TYPE_1D == (0));
static_assert(VK_IMAGE_VIEW_TYPE_2D == (1));
static_assert(VK_IMAGE_VIEW_TYPE_3D == (2));
static_assert(VK_IMAGE_VIEW_TYPE_CUBE == (3));
static_assert(VK_IMAGE_VIEW_TYPE_1D_ARRAY == (4));
static_assert(VK_IMAGE_VIEW_TYPE_2D_ARRAY == (5));
static_assert(VK_IMAGE_VIEW_TYPE_CUBE_ARRAY == (6));
static_assert(VK_COMMAND_BUFFER_LEVEL_PRIMARY == (0));
static_assert(VK_COMMAND_BUFFER_LEVEL_SECONDARY == (1));
static_assert(VK_COMPONENT_SWIZZLE_IDENTITY == (0));
static_assert(VK_COMPONENT_SWIZZLE_ZERO == (1));
static_assert(VK_COMPONENT_SWIZZLE_ONE == (2));
static_assert(VK_COMPONENT_SWIZZLE_R == (3));
static_assert(VK_COMPONENT_SWIZZLE_G == (4));
static_assert(VK_COMPONENT_SWIZZLE_B == (5));
static_assert(VK_COMPONENT_SWIZZLE_A == (6));
static_assert(VK_DESCRIPTOR_TYPE_SAMPLER == (0));
static_assert(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER == (1));
static_assert(VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE == (2));
static_assert(VK_DESCRIPTOR_TYPE_STORAGE_IMAGE == (3));
static_assert(VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER == (4));
static_assert(VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER == (5));
static_assert(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER == (6));
static_assert(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER == (7));
static_assert(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC == (8));
static_assert(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC == (9));
static_assert(VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT == (10));
static_assert(VK_QUERY_TYPE_OCCLUSION == (0));
static_assert(VK_QUERY_TYPE_PIPELINE_STATISTICS == (1));
static_assert(VK_QUERY_TYPE_TIMESTAMP == (2));
static_assert(VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK == (0));
static_assert(VK_BORDER_COLOR_INT_TRANSPARENT_BLACK == (1));
static_assert(VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK == (2));
static_assert(VK_BORDER_COLOR_INT_OPAQUE_BLACK == (3));
static_assert(VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE == (4));
static_assert(VK_BORDER_COLOR_INT_OPAQUE_WHITE == (5));
static_assert(VK_PIPELINE_BIND_POINT_GRAPHICS == (0));
static_assert(VK_PIPELINE_BIND_POINT_COMPUTE == (1));
static_assert(VK_PIPELINE_CACHE_HEADER_VERSION_ONE == (1));
static_assert(VK_PRIMITIVE_TOPOLOGY_POINT_LIST == (0));
static_assert(VK_PRIMITIVE_TOPOLOGY_LINE_LIST == (1));
static_assert(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP == (2));
static_assert(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST == (3));
static_assert(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP == (4));
static_assert(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN == (5));
static_assert(VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY == (6));
static_assert(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY == (7));
static_assert(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY == (8));
static_assert(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY == (9));
static_assert(VK_PRIMITIVE_TOPOLOGY_PATCH_LIST == (10));
static_assert(VK_SHARING_MODE_EXCLUSIVE == (0));
static_assert(VK_SHARING_MODE_CONCURRENT == (1));
static_assert(VK_INDEX_TYPE_UINT16 == (0));
static_assert(VK_INDEX_TYPE_UINT32 == (1));
static_assert(VK_FILTER_NEAREST == (0));
static_assert(VK_FILTER_LINEAR == (1));
static_assert(VK_SAMPLER_MIPMAP_MODE_NEAREST == (0));
static_assert(VK_SAMPLER_MIPMAP_MODE_LINEAR == (1));
static_assert(VK_SAMPLER_ADDRESS_MODE_REPEAT == (0));
static_assert(VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT == (1));
static_assert(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE == (2));
static_assert(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER == (3));
static_assert(VK_COMPARE_OP_NEVER == (0));
static_assert(VK_COMPARE_OP_LESS == (1));
static_assert(VK_COMPARE_OP_EQUAL == (2));
static_assert(VK_COMPARE_OP_LESS_OR_EQUAL == (3));
static_assert(VK_COMPARE_OP_GREATER == (4));
static_assert(VK_COMPARE_OP_NOT_EQUAL == (5));
static_assert(VK_COMPARE_OP_GREATER_OR_EQUAL == (6));
static_assert(VK_COMPARE_OP_ALWAYS == (7));
static_assert(VK_POLYGON_MODE_FILL == (0));
static_assert(VK_POLYGON_MODE_LINE == (1));
static_assert(VK_POLYGON_MODE_POINT == (2));
static_assert(VK_CULL_MODE_NONE == (0));
static_assert(VK_CULL_MODE_FRONT_BIT == 1 << (0));
static_assert(VK_CULL_MODE_BACK_BIT == 1 << (1));
static_assert(VK_CULL_MODE_FRONT_AND_BACK == (0x00000003));
static_assert(VK_FRONT_FACE_COUNTER_CLOCKWISE == (0));
static_assert(VK_FRONT_FACE_CLOCKWISE == (1));
static_assert(VK_BLEND_FACTOR_ZERO == (0));
static_assert(VK_BLEND_FACTOR_ONE == (1));
static_assert(VK_BLEND_FACTOR_SRC_COLOR == (2));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR == (3));
static_assert(VK_BLEND_FACTOR_DST_COLOR == (4));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR == (5));
static_assert(VK_BLEND_FACTOR_SRC_ALPHA == (6));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA == (7));
static_assert(VK_BLEND_FACTOR_DST_ALPHA == (8));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA == (9));
static_assert(VK_BLEND_FACTOR_CONSTANT_COLOR == (10));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR == (11));
static_assert(VK_BLEND_FACTOR_CONSTANT_ALPHA == (12));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA == (13));
static_assert(VK_BLEND_FACTOR_SRC_ALPHA_SATURATE == (14));
static_assert(VK_BLEND_FACTOR_SRC1_COLOR == (15));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR == (16));
static_assert(VK_BLEND_FACTOR_SRC1_ALPHA == (17));
static_assert(VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA == (18));
static_assert(VK_BLEND_OP_ADD == (0));
static_assert(VK_BLEND_OP_SUBTRACT == (1));
static_assert(VK_BLEND_OP_REVERSE_SUBTRACT == (2));
static_assert(VK_BLEND_OP_MIN == (3));
static_assert(VK_BLEND_OP_MAX == (4));
static_assert(VK_STENCIL_OP_KEEP == (0));
static_assert(VK_STENCIL_OP_ZERO == (1));
static_assert(VK_STENCIL_OP_REPLACE == (2));
static_assert(VK_STENCIL_OP_INCREMENT_AND_CLAMP == (3));
static_assert(VK_STENCIL_OP_DECREMENT_AND_CLAMP == (4));
static_assert(VK_STENCIL_OP_INVERT == (5));
static_assert(VK_STENCIL_OP_INCREMENT_AND_WRAP == (6));
static_assert(VK_STENCIL_OP_DECREMENT_AND_WRAP == (7));
static_assert(VK_LOGIC_OP_CLEAR == (0));
static_assert(VK_LOGIC_OP_AND == (1));
static_assert(VK_LOGIC_OP_AND_REVERSE == (2));
static_assert(VK_LOGIC_OP_COPY == (3));
static_assert(VK_LOGIC_OP_AND_INVERTED == (4));
static_assert(VK_LOGIC_OP_NO_OP == (5));
static_assert(VK_LOGIC_OP_XOR == (6));
static_assert(VK_LOGIC_OP_OR == (7));
static_assert(VK_LOGIC_OP_NOR == (8));
static_assert(VK_LOGIC_OP_EQUIVALENT == (9));
static_assert(VK_LOGIC_OP_INVERT == (10));
static_assert(VK_LOGIC_OP_OR_REVERSE == (11));
static_assert(VK_LOGIC_OP_COPY_INVERTED == (12));
static_assert(VK_LOGIC_OP_OR_INVERTED == (13));
static_assert(VK_LOGIC_OP_NAND == (14));
static_assert(VK_LOGIC_OP_SET == (15));
static_assert(VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE == (0));
static_assert(VK_SYSTEM_ALLOCATION_SCOPE_COMMAND == (0));
static_assert(VK_SYSTEM_ALLOCATION_SCOPE_OBJECT == (1));
static_assert(VK_SYSTEM_ALLOCATION_SCOPE_CACHE == (2));
static_assert(VK_SYSTEM_ALLOCATION_SCOPE_DEVICE == (3));
static_assert(VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE == (4));
static_assert(VK_PHYSICAL_DEVICE_TYPE_OTHER == (0));
static_assert(VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU == (1));
static_assert(VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU == (2));
static_assert(VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU == (3));
static_assert(VK_PHYSICAL_DEVICE_TYPE_CPU == (4));
static_assert(VK_VERTEX_INPUT_RATE_VERTEX == (0));
static_assert(VK_VERTEX_INPUT_RATE_INSTANCE == (1));
static_assert(VK_FORMAT_UNDEFINED == (0));
static_assert(VK_FORMAT_R4G4_UNORM_PACK8 == (1));
static_assert(VK_FORMAT_R4G4B4A4_UNORM_PACK16 == (2));
static_assert(VK_FORMAT_B4G4R4A4_UNORM_PACK16 == (3));
static_assert(VK_FORMAT_R5G6B5_UNORM_PACK16 == (4));
static_assert(VK_FORMAT_B5G6R5_UNORM_PACK16 == (5));
static_assert(VK_FORMAT_R5G5B5A1_UNORM_PACK16 == (6));
static_assert(VK_FORMAT_B5G5R5A1_UNORM_PACK16 == (7));
static_assert(VK_FORMAT_A1R5G5B5_UNORM_PACK16 == (8));
static_assert(VK_FORMAT_R8_UNORM == (9));
static_assert(VK_FORMAT_R8_SNORM == (10));
static_assert(VK_FORMAT_R8_USCALED == (11));
static_assert(VK_FORMAT_R8_SSCALED == (12));
static_assert(VK_FORMAT_R8_UINT == (13));
static_assert(VK_FORMAT_R8_SINT == (14));
static_assert(VK_FORMAT_R8_SRGB == (15));
static_assert(VK_FORMAT_R8G8_UNORM == (16));
static_assert(VK_FORMAT_R8G8_SNORM == (17));
static_assert(VK_FORMAT_R8G8_USCALED == (18));
static_assert(VK_FORMAT_R8G8_SSCALED == (19));
static_assert(VK_FORMAT_R8G8_UINT == (20));
static_assert(VK_FORMAT_R8G8_SINT == (21));
static_assert(VK_FORMAT_R8G8_SRGB == (22));
static_assert(VK_FORMAT_R8G8B8_UNORM == (23));
static_assert(VK_FORMAT_R8G8B8_SNORM == (24));
static_assert(VK_FORMAT_R8G8B8_USCALED == (25));
static_assert(VK_FORMAT_R8G8B8_SSCALED == (26));
static_assert(VK_FORMAT_R8G8B8_UINT == (27));
static_assert(VK_FORMAT_R8G8B8_SINT == (28));
static_assert(VK_FORMAT_R8G8B8_SRGB == (29));
static_assert(VK_FORMAT_B8G8R8_UNORM == (30));
static_assert(VK_FORMAT_B8G8R8_SNORM == (31));
static_assert(VK_FORMAT_B8G8R8_USCALED == (32));
static_assert(VK_FORMAT_B8G8R8_SSCALED == (33));
static_assert(VK_FORMAT_B8G8R8_UINT == (34));
static_assert(VK_FORMAT_B8G8R8_SINT == (35));
static_assert(VK_FORMAT_B8G8R8_SRGB == (36));
static_assert(VK_FORMAT_R8G8B8A8_UNORM == (37));
static_assert(VK_FORMAT_R8G8B8A8_SNORM == (38));
static_assert(VK_FORMAT_R8G8B8A8_USCALED == (39));
static_assert(VK_FORMAT_R8G8B8A8_SSCALED == (40));
static_assert(VK_FORMAT_R8G8B8A8_UINT == (41));
static_assert(VK_FORMAT_R8G8B8A8_SINT == (42));
static_assert(VK_FORMAT_R8G8B8A8_SRGB == (43));
static_assert(VK_FORMAT_B8G8R8A8_UNORM == (44));
static_assert(VK_FORMAT_B8G8R8A8_SNORM == (45));
static_assert(VK_FORMAT_B8G8R8A8_USCALED == (46));
static_assert(VK_FORMAT_B8G8R8A8_SSCALED == (47));
static_assert(VK_FORMAT_B8G8R8A8_UINT == (48));
static_assert(VK_FORMAT_B8G8R8A8_SINT == (49));
static_assert(VK_FORMAT_B8G8R8A8_SRGB == (50));
static_assert(VK_FORMAT_A8B8G8R8_UNORM_PACK32 == (51));
static_assert(VK_FORMAT_A8B8G8R8_SNORM_PACK32 == (52));
static_assert(VK_FORMAT_A8B8G8R8_USCALED_PACK32 == (53));
static_assert(VK_FORMAT_A8B8G8R8_SSCALED_PACK32 == (54));
static_assert(VK_FORMAT_A8B8G8R8_UINT_PACK32 == (55));
static_assert(VK_FORMAT_A8B8G8R8_SINT_PACK32 == (56));
static_assert(VK_FORMAT_A8B8G8R8_SRGB_PACK32 == (57));
static_assert(VK_FORMAT_A2R10G10B10_UNORM_PACK32 == (58));
static_assert(VK_FORMAT_A2R10G10B10_SNORM_PACK32 == (59));
static_assert(VK_FORMAT_A2R10G10B10_USCALED_PACK32 == (60));
static_assert(VK_FORMAT_A2R10G10B10_SSCALED_PACK32 == (61));
static_assert(VK_FORMAT_A2R10G10B10_UINT_PACK32 == (62));
static_assert(VK_FORMAT_A2R10G10B10_SINT_PACK32 == (63));
static_assert(VK_FORMAT_A2B10G10R10_UNORM_PACK32 == (64));
static_assert(VK_FORMAT_A2B10G10R10_SNORM_PACK32 == (65));
static_assert(VK_FORMAT_A2B10G10R10_USCALED_PACK32 == (66));
static_assert(VK_FORMAT_A2B10G10R10_SSCALED_PACK32 == (67));
static_assert(VK_FORMAT_A2B10G10R10_UINT_PACK32 == (68));
static_assert(VK_FORMAT_A2B10G10R10_SINT_PACK32 == (69));
static_assert(VK_FORMAT_R16_UNORM == (70));
static_assert(VK_FORMAT_R16_SNORM == (71));
static_assert(VK_FORMAT_R16_USCALED == (72));
static_assert(VK_FORMAT_R16_SSCALED == (73));
static_assert(VK_FORMAT_R16_UINT == (74));
static_assert(VK_FORMAT_R16_SINT == (75));
static_assert(VK_FORMAT_R16_SFLOAT == (76));
static_assert(VK_FORMAT_R16G16_UNORM == (77));
static_assert(VK_FORMAT_R16G16_SNORM == (78));
static_assert(VK_FORMAT_R16G16_USCALED == (79));
static_assert(VK_FORMAT_R16G16_SSCALED == (80));
static_assert(VK_FORMAT_R16G16_UINT == (81));
static_assert(VK_FORMAT_R16G16_SINT == (82));
static_assert(VK_FORMAT_R16G16_SFLOAT == (83));
static_assert(VK_FORMAT_R16G16B16_UNORM == (84));
static_assert(VK_FORMAT_R16G16B16_SNORM == (85));
static_assert(VK_FORMAT_R16G16B16_USCALED == (86));
static_assert(VK_FORMAT_R16G16B16_SSCALED == (87));
static_assert(VK_FORMAT_R16G16B16_UINT == (88));
static_assert(VK_FORMAT_R16G16B16_SINT == (89));
static_assert(VK_FORMAT_R16G16B16_SFLOAT == (90));
static_assert(VK_FORMAT_R16G16B16A16_UNORM == (91));
static_assert(VK_FORMAT_R16G16B16A16_SNORM == (92));
static_assert(VK_FORMAT_R16G16B16A16_USCALED == (93));
static_assert(VK_FORMAT_R16G16B16A16_SSCALED == (94));
static_assert(VK_FORMAT_R16G16B16A16_UINT == (95));
static_assert(VK_FORMAT_R16G16B16A16_SINT == (96));
static_assert(VK_FORMAT_R16G16B16A16_SFLOAT == (97));
static_assert(VK_FORMAT_R32_UINT == (98));
static_assert(VK_FORMAT_R32_SINT == (99));
static_assert(VK_FORMAT_R32_SFLOAT == (100));
static_assert(VK_FORMAT_R32G32_UINT == (101));
static_assert(VK_FORMAT_R32G32_SINT == (102));
static_assert(VK_FORMAT_R32G32_SFLOAT == (103));
static_assert(VK_FORMAT_R32G32B32_UINT == (104));
static_assert(VK_FORMAT_R32G32B32_SINT == (105));
static_assert(VK_FORMAT_R32G32B32_SFLOAT == (106));
static_assert(VK_FORMAT_R32G32B32A32_UINT == (107));
static_assert(VK_FORMAT_R32G32B32A32_SINT == (108));
static_assert(VK_FORMAT_R32G32B32A32_SFLOAT == (109));
static_assert(VK_FORMAT_R64_UINT == (110));
static_assert(VK_FORMAT_R64_SINT == (111));
static_assert(VK_FORMAT_R64_SFLOAT == (112));
static_assert(VK_FORMAT_R64G64_UINT == (113));
static_assert(VK_FORMAT_R64G64_SINT == (114));
static_assert(VK_FORMAT_R64G64_SFLOAT == (115));
static_assert(VK_FORMAT_R64G64B64_UINT == (116));
static_assert(VK_FORMAT_R64G64B64_SINT == (117));
static_assert(VK_FORMAT_R64G64B64_SFLOAT == (118));
static_assert(VK_FORMAT_R64G64B64A64_UINT == (119));
static_assert(VK_FORMAT_R64G64B64A64_SINT == (120));
static_assert(VK_FORMAT_R64G64B64A64_SFLOAT == (121));
static_assert(VK_FORMAT_B10G11R11_UFLOAT_PACK32 == (122));
static_assert(VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 == (123));
static_assert(VK_FORMAT_D16_UNORM == (124));
static_assert(VK_FORMAT_X8_D24_UNORM_PACK32 == (125));
static_assert(VK_FORMAT_D32_SFLOAT == (126));
static_assert(VK_FORMAT_S8_UINT == (127));
static_assert(VK_FORMAT_D16_UNORM_S8_UINT == (128));
static_assert(VK_FORMAT_D24_UNORM_S8_UINT == (129));
static_assert(VK_FORMAT_D32_SFLOAT_S8_UINT == (130));
static_assert(VK_FORMAT_BC1_RGB_UNORM_BLOCK == (131));
static_assert(VK_FORMAT_BC1_RGB_SRGB_BLOCK == (132));
static_assert(VK_FORMAT_BC1_RGBA_UNORM_BLOCK == (133));
static_assert(VK_FORMAT_BC1_RGBA_SRGB_BLOCK == (134));
static_assert(VK_FORMAT_BC2_UNORM_BLOCK == (135));
static_assert(VK_FORMAT_BC2_SRGB_BLOCK == (136));
static_assert(VK_FORMAT_BC3_UNORM_BLOCK == (137));
static_assert(VK_FORMAT_BC3_SRGB_BLOCK == (138));
static_assert(VK_FORMAT_BC4_UNORM_BLOCK == (139));
static_assert(VK_FORMAT_BC4_SNORM_BLOCK == (140));
static_assert(VK_FORMAT_BC5_UNORM_BLOCK == (141));
static_assert(VK_FORMAT_BC5_SNORM_BLOCK == (142));
static_assert(VK_FORMAT_BC6H_UFLOAT_BLOCK == (143));
static_assert(VK_FORMAT_BC6H_SFLOAT_BLOCK == (144));
static_assert(VK_FORMAT_BC7_UNORM_BLOCK == (145));
static_assert(VK_FORMAT_BC7_SRGB_BLOCK == (146));
static_assert(VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK == (147));
static_assert(VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK == (148));
static_assert(VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK == (149));
static_assert(VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK == (150));
static_assert(VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK == (151));
static_assert(VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK == (152));
static_assert(VK_FORMAT_EAC_R11_UNORM_BLOCK == (153));
static_assert(VK_FORMAT_EAC_R11_SNORM_BLOCK == (154));
static_assert(VK_FORMAT_EAC_R11G11_UNORM_BLOCK == (155));
static_assert(VK_FORMAT_EAC_R11G11_SNORM_BLOCK == (156));
static_assert(VK_FORMAT_ASTC_4x4_UNORM_BLOCK == (157));
static_assert(VK_FORMAT_ASTC_4x4_SRGB_BLOCK == (158));
static_assert(VK_FORMAT_ASTC_5x4_UNORM_BLOCK == (159));
static_assert(VK_FORMAT_ASTC_5x4_SRGB_BLOCK == (160));
static_assert(VK_FORMAT_ASTC_5x5_UNORM_BLOCK == (161));
static_assert(VK_FORMAT_ASTC_5x5_SRGB_BLOCK == (162));
static_assert(VK_FORMAT_ASTC_6x5_UNORM_BLOCK == (163));
static_assert(VK_FORMAT_ASTC_6x5_SRGB_BLOCK == (164));
static_assert(VK_FORMAT_ASTC_6x6_UNORM_BLOCK == (165));
static_assert(VK_FORMAT_ASTC_6x6_SRGB_BLOCK == (166));
static_assert(VK_FORMAT_ASTC_8x5_UNORM_BLOCK == (167));
static_assert(VK_FORMAT_ASTC_8x5_SRGB_BLOCK == (168));
static_assert(VK_FORMAT_ASTC_8x6_UNORM_BLOCK == (169));
static_assert(VK_FORMAT_ASTC_8x6_SRGB_BLOCK == (170));
static_assert(VK_FORMAT_ASTC_8x8_UNORM_BLOCK == (171));
static_assert(VK_FORMAT_ASTC_8x8_SRGB_BLOCK == (172));
static_assert(VK_FORMAT_ASTC_10x5_UNORM_BLOCK == (173));
static_assert(VK_FORMAT_ASTC_10x5_SRGB_BLOCK == (174));
static_assert(VK_FORMAT_ASTC_10x6_UNORM_BLOCK == (175));
static_assert(VK_FORMAT_ASTC_10x6_SRGB_BLOCK == (176));
static_assert(VK_FORMAT_ASTC_10x8_UNORM_BLOCK == (177));
static_assert(VK_FORMAT_ASTC_10x8_SRGB_BLOCK == (178));
static_assert(VK_FORMAT_ASTC_10x10_UNORM_BLOCK == (179));
static_assert(VK_FORMAT_ASTC_10x10_SRGB_BLOCK == (180));
static_assert(VK_FORMAT_ASTC_12x10_UNORM_BLOCK == (181));
static_assert(VK_FORMAT_ASTC_12x10_SRGB_BLOCK == (182));
static_assert(VK_FORMAT_ASTC_12x12_UNORM_BLOCK == (183));
static_assert(VK_FORMAT_ASTC_12x12_SRGB_BLOCK == (184));
static_assert(VK_STRUCTURE_TYPE_APPLICATION_INFO == (0));
static_assert(VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO == (1));
static_assert(VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO == (2));
static_assert(VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO == (3));
static_assert(VK_STRUCTURE_TYPE_SUBMIT_INFO == (4));
static_assert(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO == (5));
static_assert(VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE == (6));
static_assert(VK_STRUCTURE_TYPE_BIND_SPARSE_INFO == (7));
static_assert(VK_STRUCTURE_TYPE_FENCE_CREATE_INFO == (8));
static_assert(VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO == (9));
static_assert(VK_STRUCTURE_TYPE_EVENT_CREATE_INFO == (10));
static_assert(VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO == (11));
static_assert(VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO == (12));
static_assert(VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO == (13));
static_assert(VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO == (14));
static_assert(VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO == (15));
static_assert(VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO == (16));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO == (17));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO == (18));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO ==
              (19));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO ==
              (20));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO ==
              (21));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO == (22));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO ==
              (23));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO == (24));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO ==
              (25));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO == (26));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO == (27));
static_assert(VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO == (28));
static_assert(VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO == (29));
static_assert(VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO == (30));
static_assert(VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO == (31));
static_assert(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO == (32));
static_assert(VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO == (33));
static_assert(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO == (34));
static_assert(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET == (35));
static_assert(VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET == (36));
static_assert(VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO == (37));
static_assert(VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO == (38));
static_assert(VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO == (39));
static_assert(VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO == (40));
static_assert(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO == (41));
static_assert(VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO == (42));
static_assert(VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO == (43));
static_assert(VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER == (44));
static_assert(VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER == (45));
static_assert(VK_STRUCTURE_TYPE_MEMORY_BARRIER == (46));
static_assert(VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO == (47));
static_assert(VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO == (48));
static_assert(VK_SUBPASS_CONTENTS_INLINE == (0));
static_assert(VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS == (1));
static_assert(VK_SUCCESS == (0));
static_assert(VK_NOT_READY == (1));
static_assert(VK_TIMEOUT == (2));
static_assert(VK_EVENT_SET == (3));
static_assert(VK_EVENT_RESET == (4));
static_assert(VK_INCOMPLETE == (5));
static_assert(VK_ERROR_OUT_OF_HOST_MEMORY == (-1));
static_assert(VK_ERROR_OUT_OF_DEVICE_MEMORY == (-2));
static_assert(VK_ERROR_INITIALIZATION_FAILED == (-3));
static_assert(VK_ERROR_DEVICE_LOST == (-4));
static_assert(VK_ERROR_MEMORY_MAP_FAILED == (-5));
static_assert(VK_ERROR_LAYER_NOT_PRESENT == (-6));
static_assert(VK_ERROR_EXTENSION_NOT_PRESENT == (-7));
static_assert(VK_ERROR_FEATURE_NOT_PRESENT == (-8));
static_assert(VK_ERROR_INCOMPATIBLE_DRIVER == (-9));
static_assert(VK_ERROR_TOO_MANY_OBJECTS == (-10));
static_assert(VK_ERROR_FORMAT_NOT_SUPPORTED == (-11));
static_assert(VK_ERROR_FRAGMENTED_POOL == (-12));
static_assert(VK_DYNAMIC_STATE_VIEWPORT == (0));
static_assert(VK_DYNAMIC_STATE_SCISSOR == (1));
static_assert(VK_DYNAMIC_STATE_LINE_WIDTH == (2));
static_assert(VK_DYNAMIC_STATE_DEPTH_BIAS == (3));
static_assert(VK_DYNAMIC_STATE_BLEND_CONSTANTS == (4));
static_assert(VK_DYNAMIC_STATE_DEPTH_BOUNDS == (5));
static_assert(VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK == (6));
static_assert(VK_DYNAMIC_STATE_STENCIL_WRITE_MASK == (7));
static_assert(VK_DYNAMIC_STATE_STENCIL_REFERENCE == (8));
static_assert(VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET == (0));
static_assert(VK_OBJECT_TYPE_UNKNOWN == (0));
static_assert(VK_OBJECT_TYPE_INSTANCE == (1));
static_assert(VK_OBJECT_TYPE_PHYSICAL_DEVICE == (2));
static_assert(VK_OBJECT_TYPE_DEVICE == (3));
static_assert(VK_OBJECT_TYPE_QUEUE == (4));
static_assert(VK_OBJECT_TYPE_SEMAPHORE == (5));
static_assert(VK_OBJECT_TYPE_COMMAND_BUFFER == (6));
static_assert(VK_OBJECT_TYPE_FENCE == (7));
static_assert(VK_OBJECT_TYPE_DEVICE_MEMORY == (8));
static_assert(VK_OBJECT_TYPE_BUFFER == (9));
static_assert(VK_OBJECT_TYPE_IMAGE == (10));
static_assert(VK_OBJECT_TYPE_EVENT == (11));
static_assert(VK_OBJECT_TYPE_QUERY_POOL == (12));
static_assert(VK_OBJECT_TYPE_BUFFER_VIEW == (13));
static_assert(VK_OBJECT_TYPE_IMAGE_VIEW == (14));
static_assert(VK_OBJECT_TYPE_SHADER_MODULE == (15));
static_assert(VK_OBJECT_TYPE_PIPELINE_CACHE == (16));
static_assert(VK_OBJECT_TYPE_PIPELINE_LAYOUT == (17));
static_assert(VK_OBJECT_TYPE_RENDER_PASS == (18));
static_assert(VK_OBJECT_TYPE_PIPELINE == (19));
static_assert(VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT == (20));
static_assert(VK_OBJECT_TYPE_SAMPLER == (21));
static_assert(VK_OBJECT_TYPE_DESCRIPTOR_POOL == (22));
static_assert(VK_OBJECT_TYPE_DESCRIPTOR_SET == (23));
static_assert(VK_OBJECT_TYPE_FRAMEBUFFER == (24));
static_assert(VK_OBJECT_TYPE_COMMAND_POOL == (25));
static_assert(VK_QUEUE_GRAPHICS_BIT == 1 << (0));
static_assert(VK_QUEUE_COMPUTE_BIT == 1 << (1));
static_assert(VK_QUEUE_TRANSFER_BIT == 1 << (2));
static_assert(VK_QUEUE_SPARSE_BINDING_BIT == 1 << (3));
static_assert(VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT == 1 << (0));
static_assert(VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT == 1 << (1));
static_assert(VK_MEMORY_PROPERTY_HOST_COHERENT_BIT == 1 << (2));
static_assert(VK_MEMORY_PROPERTY_HOST_CACHED_BIT == 1 << (3));
static_assert(VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT == 1 << (4));
static_assert(VK_MEMORY_HEAP_DEVICE_LOCAL_BIT == 1 << (0));
static_assert(VK_ACCESS_INDIRECT_COMMAND_READ_BIT == 1 << (0));
static_assert(VK_ACCESS_INDEX_READ_BIT == 1 << (1));
static_assert(VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT == 1 << (2));
static_assert(VK_ACCESS_UNIFORM_READ_BIT == 1 << (3));
static_assert(VK_ACCESS_INPUT_ATTACHMENT_READ_BIT == 1 << (4));
static_assert(VK_ACCESS_SHADER_READ_BIT == 1 << (5));
static_assert(VK_ACCESS_SHADER_WRITE_BIT == 1 << (6));
static_assert(VK_ACCESS_COLOR_ATTACHMENT_READ_BIT == 1 << (7));
static_assert(VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT == 1 << (8));
static_assert(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT == 1 << (9));
static_assert(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT == 1 << (10));
static_assert(VK_ACCESS_TRANSFER_READ_BIT == 1 << (11));
static_assert(VK_ACCESS_TRANSFER_WRITE_BIT == 1 << (12));
static_assert(VK_ACCESS_HOST_READ_BIT == 1 << (13));
static_assert(VK_ACCESS_HOST_WRITE_BIT == 1 << (14));
static_assert(VK_ACCESS_MEMORY_READ_BIT == 1 << (15));
static_assert(VK_ACCESS_MEMORY_WRITE_BIT == 1 << (16));
static_assert(VK_BUFFER_USAGE_TRANSFER_SRC_BIT == 1 << (0));
static_assert(VK_BUFFER_USAGE_TRANSFER_DST_BIT == 1 << (1));
static_assert(VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT == 1 << (2));
static_assert(VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT == 1 << (3));
static_assert(VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT == 1 << (4));
static_assert(VK_BUFFER_USAGE_STORAGE_BUFFER_BIT == 1 << (5));
static_assert(VK_BUFFER_USAGE_INDEX_BUFFER_BIT == 1 << (6));
static_assert(VK_BUFFER_USAGE_VERTEX_BUFFER_BIT == 1 << (7));
static_assert(VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT == 1 << (8));
static_assert(VK_BUFFER_CREATE_SPARSE_BINDING_BIT == 1 << (0));
static_assert(VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT == 1 << (1));
static_assert(VK_BUFFER_CREATE_SPARSE_ALIASED_BIT == 1 << (2));
static_assert(VK_SHADER_STAGE_VERTEX_BIT == 1 << (0));
static_assert(VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT == 1 << (1));
static_assert(VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT == 1 << (2));
static_assert(VK_SHADER_STAGE_GEOMETRY_BIT == 1 << (3));
static_assert(VK_SHADER_STAGE_FRAGMENT_BIT == 1 << (4));
static_assert(VK_SHADER_STAGE_COMPUTE_BIT == 1 << (5));
static_assert(VK_SHADER_STAGE_ALL_GRAPHICS == (0x0000001F));
static_assert(VK_SHADER_STAGE_ALL == (0x7FFFFFFF));
static_assert(VK_IMAGE_USAGE_TRANSFER_SRC_BIT == 1 << (0));
static_assert(VK_IMAGE_USAGE_TRANSFER_DST_BIT == 1 << (1));
static_assert(VK_IMAGE_USAGE_SAMPLED_BIT == 1 << (2));
static_assert(VK_IMAGE_USAGE_STORAGE_BIT == 1 << (3));
static_assert(VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT == 1 << (4));
static_assert(VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT == 1 << (5));
static_assert(VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT == 1 << (6));
static_assert(VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT == 1 << (7));
static_assert(VK_IMAGE_CREATE_SPARSE_BINDING_BIT == 1 << (0));
static_assert(VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT == 1 << (1));
static_assert(VK_IMAGE_CREATE_SPARSE_ALIASED_BIT == 1 << (2));
static_assert(VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT == 1 << (3));
static_assert(VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT == 1 << (4));
static_assert(VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT == 1 << (0));
static_assert(VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT == 1 << (1));
static_assert(VK_PIPELINE_CREATE_DERIVATIVE_BIT == 1 << (2));
static_assert(VK_COLOR_COMPONENT_R_BIT == 1 << (0));
static_assert(VK_COLOR_COMPONENT_G_BIT == 1 << (1));
static_assert(VK_COLOR_COMPONENT_B_BIT == 1 << (2));
static_assert(VK_COLOR_COMPONENT_A_BIT == 1 << (3));
static_assert(VK_FENCE_CREATE_SIGNALED_BIT == 1 << (0));
static_assert(VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT == 1 << (0));
static_assert(VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT == 1 << (1));
static_assert(VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT == 1 << (2));
static_assert(VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT == 1 << (3));
static_assert(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT == 1 << (4));
static_assert(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT == 1 << (5));
static_assert(VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT == 1 << (6));
static_assert(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT == 1 << (7));
static_assert(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT == 1 << (8));
static_assert(VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT == 1 << (9));
static_assert(VK_FORMAT_FEATURE_BLIT_SRC_BIT == 1 << (10));
static_assert(VK_FORMAT_FEATURE_BLIT_DST_BIT == 1 << (11));
static_assert(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT == 1 << (12));
static_assert(VK_QUERY_CONTROL_PRECISE_BIT == 1 << (0));
static_assert(VK_QUERY_RESULT_64_BIT == 1 << (0));
static_assert(VK_QUERY_RESULT_WAIT_BIT == 1 << (1));
static_assert(VK_QUERY_RESULT_WITH_AVAILABILITY_BIT == 1 << (2));
static_assert(VK_QUERY_RESULT_PARTIAL_BIT == 1 << (3));
static_assert(VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT == 1 << (0));
static_assert(VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT == 1 << (1));
static_assert(VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT == 1 << (2));
static_assert(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT ==
              1 << (0));
static_assert(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT ==
              1 << (1));
static_assert(VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT ==
              1 << (2));
static_assert(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT ==
              1 << (3));
static_assert(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT ==
              1 << (4));
static_assert(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT == 1 << (5));
static_assert(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT == 1 << (6));
static_assert(VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT ==
              1 << (7));
static_assert(
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT ==
    1 << (8));
static_assert(
    VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT ==
    1 << (9));
static_assert(VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT ==
              1 << (10));
static_assert(VK_IMAGE_ASPECT_COLOR_BIT == 1 << (0));
static_assert(VK_IMAGE_ASPECT_DEPTH_BIT == 1 << (1));
static_assert(VK_IMAGE_ASPECT_STENCIL_BIT == 1 << (2));
static_assert(VK_IMAGE_ASPECT_METADATA_BIT == 1 << (3));
static_assert(VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT == 1 << (0));
static_assert(VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT == 1 << (1));
static_assert(VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT == 1 << (2));
static_assert(VK_SPARSE_MEMORY_BIND_METADATA_BIT == 1 << (0));
static_assert(VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT == 1 << (0));
static_assert(VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT == 1 << (1));
static_assert(VK_PIPELINE_STAGE_VERTEX_INPUT_BIT == 1 << (2));
static_assert(VK_PIPELINE_STAGE_VERTEX_SHADER_BIT == 1 << (3));
static_assert(VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT == 1 << (4));
static_assert(VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT == 1 << (5));
static_assert(VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT == 1 << (6));
static_assert(VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT == 1 << (7));
static_assert(VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT == 1 << (8));
static_assert(VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT == 1 << (9));
static_assert(VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT == 1 << (10));
static_assert(VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT == 1 << (11));
static_assert(VK_PIPELINE_STAGE_TRANSFER_BIT == 1 << (12));
static_assert(VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT == 1 << (13));
static_assert(VK_PIPELINE_STAGE_HOST_BIT == 1 << (14));
static_assert(VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT == 1 << (15));
static_assert(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT == 1 << (16));
static_assert(VK_COMMAND_POOL_CREATE_TRANSIENT_BIT == 1 << (0));
static_assert(VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT == 1 << (1));
static_assert(VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT == 1 << (0));
static_assert(VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT == 1 << (0));
static_assert(VK_SAMPLE_COUNT_1_BIT == 1 << (0));
static_assert(VK_SAMPLE_COUNT_2_BIT == 1 << (1));
static_assert(VK_SAMPLE_COUNT_4_BIT == 1 << (2));
static_assert(VK_SAMPLE_COUNT_8_BIT == 1 << (3));
static_assert(VK_SAMPLE_COUNT_16_BIT == 1 << (4));
static_assert(VK_SAMPLE_COUNT_32_BIT == 1 << (5));
static_assert(VK_SAMPLE_COUNT_64_BIT == 1 << (6));
static_assert(VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT == 1 << (0));
static_assert(VK_STENCIL_FACE_FRONT_BIT == 1 << (0));
static_assert(VK_STENCIL_FACE_BACK_BIT == 1 << (1));
static_assert(VK_STENCIL_FRONT_AND_BACK == (0x00000003));
static_assert(VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT == 1 << (0));
static_assert(VK_DEPENDENCY_BY_REGION_BIT == 1 << (0));
static_assert(VK_PRESENT_MODE_IMMEDIATE_KHR == (0));
static_assert(VK_PRESENT_MODE_MAILBOX_KHR == (1));
static_assert(VK_PRESENT_MODE_FIFO_KHR == (2));
static_assert(VK_PRESENT_MODE_FIFO_RELAXED_KHR == (3));
static_assert(VK_COLOR_SPACE_SRGB_NONLINEAR_KHR == (0));
static_assert(VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR == 1 << (0));
static_assert(VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR == 1 << (1));
static_assert(VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR == 1 << (2));
static_assert(VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR ==
              1 << (3));
static_assert(VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR == 1 << (0));
static_assert(VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR == 1 << (1));
static_assert(VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR == 1 << (2));
static_assert(VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR == 1 << (3));
static_assert(VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR == 1 << (0));
static_assert(VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR == 1 << (1));
static_assert(VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR == 1 << (2));
static_assert(VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR == 1 << (3));
static_assert(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR == 1 << (4));
static_assert(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR ==
              1 << (5));
static_assert(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR ==
              1 << (6));
static_assert(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR ==
              1 << (7));
static_assert(VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR == 1 << (8));
static_assert(VK_DEBUG_REPORT_INFORMATION_BIT_EXT == 1 << (0));
static_assert(VK_DEBUG_REPORT_WARNING_BIT_EXT == 1 << (1));
static_assert(VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT == 1 << (2));
static_assert(VK_DEBUG_REPORT_ERROR_BIT_EXT == 1 << (3));
static_assert(VK_DEBUG_REPORT_DEBUG_BIT_EXT == 1 << (4));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT == (0));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT == (1));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT == (2));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT == (3));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT == (4));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT == (5));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT == (6));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT == (7));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT == (8));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT == (9));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT == (10));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT == (11));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT == (12));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT == (13));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT == (14));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT == (15));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT == (16));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT == (17));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT == (18));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT == (19));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT == (20));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT == (21));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT == (22));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT == (23));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT == (24));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT == (25));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT == (26));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT == (27));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT ==
              (28));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT == (29));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT == (30));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT == (31));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT ==
              (32));
static_assert(VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT == (33));
static_assert(VK_RASTERIZATION_ORDER_STRICT_AMD == (0));
static_assert(VK_RASTERIZATION_ORDER_RELAXED_AMD == (1));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV == 1 << (0));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV ==
              1 << (1));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV == 1 << (2));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV ==
              1 << (3));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV == 1 << (0));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV == 1 << (1));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV == 1 << (2));
static_assert(VK_VALIDATION_CHECK_ALL_EXT == (0));
static_assert(VK_VALIDATION_CHECK_SHADERS_EXT == (1));
static_assert(VK_SUBGROUP_FEATURE_BASIC_BIT == 1 << (0));
static_assert(VK_SUBGROUP_FEATURE_VOTE_BIT == 1 << (1));
static_assert(VK_SUBGROUP_FEATURE_ARITHMETIC_BIT == 1 << (2));
static_assert(VK_SUBGROUP_FEATURE_BALLOT_BIT == 1 << (3));
static_assert(VK_SUBGROUP_FEATURE_SHUFFLE_BIT == 1 << (4));
static_assert(VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT == 1 << (5));
static_assert(VK_SUBGROUP_FEATURE_CLUSTERED_BIT == 1 << (6));
static_assert(VK_SUBGROUP_FEATURE_QUAD_BIT == 1 << (7));
static_assert(VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX ==
              1 << (0));
static_assert(VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX ==
              1 << (1));
static_assert(VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX ==
              1 << (2));
static_assert(VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX ==
              1 << (3));
static_assert(VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX == 1 << (0));
static_assert(VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX == 1 << (1));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX == (0));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX == (1));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX == (2));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX == (3));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX == (4));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX == (5));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX == (6));
static_assert(VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX == (7));
static_assert(VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX == (0));
static_assert(VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX == (1));
static_assert(VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX == (2));
static_assert(VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX == (3));
static_assert(VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX == (4));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT == 1 << (0));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT == 1 << (1));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT == 1 << (2));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT == 1 << (3));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT == 1 << (4));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT == 1 << (5));
static_assert(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT == 1 << (6));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT == 1 << (0));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT == 1 << (1));
static_assert(VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT == 1 << (2));
static_assert(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT == 1 << (0));
static_assert(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT == 1 << (1));
static_assert(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT ==
              1 << (2));
static_assert(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT == 1 << (3));
static_assert(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT == 1 << (4));
static_assert(VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT == 1 << (0));
static_assert(VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT == 1 << (1));
static_assert(VK_SEMAPHORE_IMPORT_TEMPORARY_BIT == 1 << (0));
static_assert(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT == 1 << (0));
static_assert(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT == 1 << (1));
static_assert(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT == 1 << (2));
static_assert(VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT == 1 << (3));
static_assert(VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT == 1 << (0));
static_assert(VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT == 1 << (1));
static_assert(VK_FENCE_IMPORT_TEMPORARY_BIT == 1 << (0));
static_assert(VK_SURFACE_COUNTER_VBLANK_EXT == 1 << (0));
static_assert(VK_DISPLAY_POWER_STATE_OFF_EXT == (0));
static_assert(VK_DISPLAY_POWER_STATE_SUSPEND_EXT == (1));
static_assert(VK_DISPLAY_POWER_STATE_ON_EXT == (2));
static_assert(VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT == (0));
static_assert(VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT == (0));
static_assert(VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT == 1 << (0));
static_assert(VK_PEER_MEMORY_FEATURE_COPY_DST_BIT == 1 << (1));
static_assert(VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT == 1 << (2));
static_assert(VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT == 1 << (3));
static_assert(VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT == 1 << (0));
static_assert(VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR == 1 << (0));
static_assert(VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR == 1 << (1));
static_assert(VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR == 1 << (2));
static_assert(VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR ==
              1 << (3));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV == (0));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV == (1));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV == (2));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV == (3));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV == (4));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV == (5));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV == (6));
static_assert(VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV == (7));
static_assert(VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT == (0));
static_assert(VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT == (1));
static_assert(VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES == (0));
static_assert(VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY == (1));
static_assert(VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT == (0));
static_assert(VK_SAMPLER_REDUCTION_MODE_MIN_EXT == (1));
static_assert(VK_SAMPLER_REDUCTION_MODE_MAX_EXT == (2));
static_assert(VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT == (0));
static_assert(VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT == (1));
static_assert(VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY == (0));
static_assert(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY == (1));
static_assert(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709 == (2));
static_assert(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601 == (3));
static_assert(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020 == (4));
static_assert(VK_SAMPLER_YCBCR_RANGE_ITU_FULL == (0));
static_assert(VK_SAMPLER_YCBCR_RANGE_ITU_NARROW == (1));
static_assert(VK_CHROMA_LOCATION_COSITED_EVEN == (0));
static_assert(VK_CHROMA_LOCATION_MIDPOINT == (1));
static_assert(VK_BLEND_OVERLAP_UNCORRELATED_EXT == (0));
static_assert(VK_BLEND_OVERLAP_DISJOINT_EXT == (1));
static_assert(VK_BLEND_OVERLAP_CONJOINT_EXT == (2));
static_assert(VK_COVERAGE_MODULATION_MODE_NONE_NV == (0));
static_assert(VK_COVERAGE_MODULATION_MODE_RGB_NV == (1));
static_assert(VK_COVERAGE_MODULATION_MODE_ALPHA_NV == (2));
static_assert(VK_COVERAGE_MODULATION_MODE_RGBA_NV == (3));
static_assert(VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT == (1));
static_assert(VK_SHADER_INFO_TYPE_STATISTICS_AMD == (0));
static_assert(VK_SHADER_INFO_TYPE_BINARY_AMD == (1));
static_assert(VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD == (2));
static_assert(VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT == (128));
static_assert(VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT == (256));
static_assert(VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT == (512));
static_assert(VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT == (1024));
static_assert(VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT == 1 << (0));
static_assert(VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT == 1 << (4));
static_assert(VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT == 1 << (8));
static_assert(VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT == 1 << (12));
static_assert(VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT == 1 << (0));
static_assert(VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT == 1 << (1));
static_assert(VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT == 1 << (2));
static_assert(VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT == (0));
static_assert(VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT == (1));
static_assert(VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT == (2));
static_assert(VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT == 1 << (0));
static_assert(VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT ==
              1 << (1));
static_assert(VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT == 1 << (2));
static_assert(VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT ==
              1 << (3));
static_assert(VK_VENDOR_ID_VIV == (0x10001));
static_assert(VK_VENDOR_ID_VSI == (0x10002));
static_assert(VK_VENDOR_ID_KAZAN == (0x10003));
static_assert(VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT == 1 << (0));
